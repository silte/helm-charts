{{- if .Values.ingress.enabled }}

{{- $app := printf "%s" .Values.name }}
{{- $namespace := printf "%s" .Values.namespace }}
{{- $host :=  .Values.ingress.host }}

{{- $defaultPort := .Values.ingress.port }}
{{- $defaultPath := .Values.ingress.path }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $app }}
  namespace: {{ $namespace }}
  annotations:
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  ingressClassName: traefik
  rules:

{{- $highestPort := 0 }}
{{- range $index, $container := .Values.containers }}
  {{- $ingress := $container.ingress | default (dict) }}
  {{- $port := $ingress.port | default $defaultPort }}
  {{- if gt (int $port) (int $highestPort) }}
    {{- $highestPort = $port }}
  {{- end }}
{{- end }}

{{- $emptyPort := add $highestPort 1 }}

{{- range $index, $path := .Values.ingress.blockedPaths }}
    - host: {{ $host }}
      http:
        paths:
          - path: {{ $path }}
            pathType: Prefix
            backend:
              service:
                name: {{ $app }}
                port:
                  number: {{ $emptyPort }}
{{- end }}


{{- range $index, $container := .Values.containers }}
{{- $containerName := printf "%s" $container.name }}

{{- $ingress := $container.ingress | default (dict) }}
{{- $paths :=  $ingress.path | default $defaultPath }}
{{- $port :=  $ingress.port | default $defaultPort }}


{{- /* Normalize paths to be array of strings */}}
{{- if kindIs "string" $paths }}
  {{- $paths = list $paths -}}
{{- end}}

{{- range $pathIndex, $path := $paths }}
    - host: {{ $host }}
      http:
        paths:
          - path: {{ $path }}
            pathType: Prefix
            backend:
              service:
                name: {{ $app }}
                port:
                  number: {{ $port }}
{{- end }}
{{- end }}
{{- end }}