{{- /* Converts a string from camelCase to snake_case */}}

{{- define "camelCaseToSnakeCase" }}
{{- $input := . -}}
{{- $input = regexReplaceAll "([a-z])([0-9])" $input "${1}_${2}" -}}
{{- $input = regexReplaceAll "([0-9])([A-Z])" $input "${1}_${2}" -}}
{{- regexReplaceAll "([a-z0-9])([A-Z])" $input "${1}_${2}" | upper -}}
{{- end -}}

{{- /* Converts a string from kebab-case to snake_case */}}

{{- define "kebabCaseToSnakeCase" }}
{{- $input := . -}}
{{- regexReplaceAll "([a-zA-Z0-9])-([a-zA-Z0-9])" $input "${1}_${2}" | lower -}}
{{- end -}}

{{- /* Converts a map from camelCase to snake_case */}}
{{- /* e.g. {"foo": {"barBaz": "123"}} -> "FOO_BAR_BAZ":"123  */}}

{{- define "nestedCaseConvertor" -}}
{{- $parentKey := .parentKey -}}
{{- $value := .value -}}
{{- if kindIs "map" $value -}}
  {{- range $key, $val := $value -}}
    {{- $newParentKey := "" -}}
    {{- if $parentKey -}}
      {{- $newParentKey = print $parentKey "_" (include "kebabCaseToSnakeCase" (include "camelCaseToSnakeCase" $key)) -}}
    {{- else -}}
      {{- $newParentKey = include "kebabCaseToSnakeCase" (include "camelCaseToSnakeCase" $key) -}}
    {{- end -}}
    {{- include "nestedCaseConvertor" (dict "parentKey" $newParentKey "value" $val) -}}
  {{- end -}}
{{- else -}}
  {{- println " " ((include "kebabCaseToSnakeCase" (include "camelCaseToSnakeCase" $parentKey)) | upper) ": " ($value | quote) -}}
{{- end -}}
{{- end -}}

{{- $app := printf "%s" .Values.name }}
{{- $namespace := printf "%s" .Values.namespace }}

{{- $port := .Values.ingress.port }}
{{- $nodeEnv := printf "%s" .Values.nodeEnv }}
{{- $cloudEnv := printf "%s" .Values.cloudEnv }}
{{- $logLevel := printf "%s" .Values.logLevel }}
{{- $noColor := .Values.noColor }}


apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $app }}-config
  namespace: {{ $namespace }}
  labels:
    app: {{ $app }}
data:
  NODE_ENV: {{ $nodeEnv | quote }}
  CLOUD_ENV: {{ $cloudEnv | quote }}
  PORT: {{ $port | quote }}
  LOG_LEVEL: {{ $logLevel | quote }}
  NO_COLOR: {{ $noColor | quote }}

{{ "  \n" }}

{{- range $key, $value := .Values.env }}
  {{- include "nestedCaseConvertor" (dict "parentKey" $key "value" $value) -}}
{{- end }}
